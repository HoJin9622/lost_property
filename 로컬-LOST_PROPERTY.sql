DROP TABLE MANAGEMENT_BOOK;
DROP TABLE SOLUTION;
DROP TABLE GETTER;
DROP TABLE LOSTITEM;

DROP SEQUENCE LOSTITEM_SEQ;
DROP SEQUENCE MANAGEMENT_SEQ;
DROP SEQUENCE GETTER_SEQ;
DROP SEQUENCE SOLUTION_SEQ;

-- 분실물 테이블
CREATE TABLE LOSTITEM (
    ID VARCHAR(20) NOT NULL,
    NAME VARCHAR(20) NOT NULL,
    STATEMENT VARCHAR(20) NOT NULL,
    PRIMARY KEY(ID)
);

-- 습득자 테이블
CREATE TABLE GETTER (
    ID            CHAR(20)    NOT NULL,
    STUDENT_NUMBER VARCHAR(20) NOT NULL,
    NAME          VARCHAR(20) NOT NULL,
    PHONENUMBER   VARCHAR(20)  NOT NULL,
    GETITEM_ID    VARCHAR(20)  NOT NULL,

    PRIMARY KEY(ID),    
    CONSTRAINT GETTER_FK FOREIGN KEY (GETITEM_ID) REFERENCES LOSTITEM(ID)
);

-- 분실대장 테이블
CREATE TABLE MANAGEMENT_BOOK (
    ID       CHAR(20)    NOT NULL,
    GETTER    CHAR(20)    NOT NULL,
    LOST_ID  VARCHAR(20) NOT NULL,
    GET_DATE     DATE    NOT NULL,

    PRIMARY KEY (ID),
    CONSTRAINT MANAGEMENT_BOOK_FK FOREIGN KEY (GETTER) REFERENCES GETTER(ID),
    FOREIGN KEY (LOST_ID) REFERENCES LOSTITEM(ID)
);

-- 해결내역 테이블
CREATE TABLE SOLUTION (
    ID       CHAR(20)    NOT NULL,
    GETTER    CHAR(20)    NOT NULL,
    LOST_ID  VARCHAR(20) NOT NULL,
    SOLUTION_DATE     DATE    NOT NULL,

    PRIMARY KEY (ID),
    CONSTRAINT SOLUTION_FK FOREIGN KEY (GETTER) REFERENCES GETTER(ID),
    FOREIGN KEY (LOST_ID) REFERENCES LOSTITEM(ID)
);

CREATE SEQUENCE LOSTITEM_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 100000
NOCYCLE;

CREATE SEQUENCE MANAGEMENT_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 100000
NOCYCLE;

CREATE SEQUENCE GETTER_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 100000
NOCYCLE;

CREATE SEQUENCE SOLUTION_SEQ
INCREMENT BY 1
START WITH 1
MINVALUE 1
MAXVALUE 100000
NOCYCLE;

-- 분실물 추가 프로시저
CREATE OR REPLACE PROCEDURE INSERT_LOST (
  IL_GETTER_ID IN CHAR,
  IL_Name IN CHAR,
  IL_PHONE IN CHAR,
  IL_GETITEM IN VARCHAR
) AS
    --v_count VARCHAR(10);
BEGIN
  INSERT INTO LOSTITEM(id, name, statement) VALUES(LOSTITEM_SEQ.NEXTVAL, IL_GETITEM, '보관중');
  INSERT INTO GETTER(ID, STUDENT_NUMBER, NAME, PHONENUMBER, GETITEM_ID) VALUES(GETTER_SEQ.NEXTVAL, IL_GETTER_ID, IL_Name, IL_PHONE, LOSTITEM_SEQ.CURRVAL);
  INSERT INTO MANAGEMENT_BOOK(ID, GETTER, lost_id, get_date) VALUES(MANAGEMENT_SEQ.NEXTVAL, GETTER_SEQ.CURRVAL, LOSTITEM_SEQ.CURRVAL, SYSDATE);
END ;

-- 해결내역 추가 프로시저
CREATE OR REPLACE PROCEDURE INSERT_SOLUTION (
  PR_MANAGEMENT_ID IN CHAR,
  PR_GETTER IN CHAR,
  PR_LOST_ID IN CHAR
) AS

BEGIN
    DELETE FROM MANAGEMENT_BOOK WHERE ID = PR_MANAGEMENT_ID;
    INSERT INTO SOLUTION(ID, GETTER, LOST_ID, SOLUTION_DATE) VALUES(SOLUTION_SEQ.NEXTVAL, PR_GETTER, PR_LOST_ID, SYSDATE);
END;

-- 상태 변경 트리거
CREATE OR REPLACE TRIGGER UPDATE_LOSTITEM
   AFTER INSERT
   ON SOLUTION 
   FOR EACH ROW 
BEGIN
    UPDATE  LOSTITEM SET statement = '회수됨' WHERE id = :NEW.LOST_ID;
END;


SET SERVEROUTPUT ON;
-- 분실물 추가 프로시저
EXECUTE INSERT_LOST ('20163250', '전은평', '010-7266-0172', '노트북');
EXECUTE INSERT_LOST ('20163245', '이호진', '010-4040-9622', '장갑');
EXECUTE INSERT_LOST ('20163244', '김강현', '010-5379-2551', '시계');
EXECUTE INSERT_LOST ('20163262', '박성준', '010-5114-8871', '노트북');
EXECUTE INSERT_LOST ('20183262', '양성진', '010-5881-1195', '장갑');
EXECUTE INSERT_LOST ('20173232', '이준석', '010-7114-5071', '공책');
EXECUTE INSERT_LOST ('20203324', '장준식', '010-1142-0570', '핸드크림');
EXECUTE INSERT_LOST ('20203251', '정서현', '010-8640-4170', '지갑');
EXECUTE INSERT_LOST ('20153248', '이준석', '010-5510-5781', '시계');


-- 해결 내역 추가 프로시저
EXECUTE INSERT_SOLUTION ('24', '24', '29');

-- 메인화면 전체 출력 쿼리
SELECT MANAGEMENT_BOOK.ID, GETTER.ID, GETTER.NAME, GETTER.PHONENUMBER, LOSTITEM.ID, LOSTITEM.NAME, LOSTITEM.STATEMENT, MANAGEMENT_BOOK.GET_DATE
FROM MANAGEMENT_BOOK, GETTER, LOSTITEM
WHERE MANAGEMENT_BOOK.GETTER = GETTER.ID AND MANAGEMENT_BOOK.LOST_ID = LOSTITEM.ID;

-- 메인화면 검색 쿼리
SELECT MANAGEMENT_BOOK.ID, GETTER.ID, GETTER.NAME, GETTER.PHONENUMBER, LOSTITEM.ID, LOSTITEM.NAME, LOSTITEM.STATEMENT, MANAGEMENT_BOOK.GET_DATE
FROM MANAGEMENT_BOOK, GETTER, LOSTITEM
WHERE MANAGEMENT_BOOK.GETTER = GETTER.ID AND MANAGEMENT_BOOK.LOST_ID = LOSTITEM.ID AND LOSTITEM.NAME LIKE '노트북';

-- 해결 내역 출력 쿼리
SELECT SOLUTION.ID, LOSTITEM.NAME, LOSTITEM.STATEMENT, SOLUTION.SOLUTION_DATE
FROM SOLUTION, LOSTITEM
WHERE SOLUTION.LOST_ID = LOSTITEM.ID